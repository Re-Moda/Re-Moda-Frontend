diff --git a/src/UserPage.css b/src/UserPage.css
index 9baff96..f694e67 100644
--- a/src/UserPage.css
+++ b/src/UserPage.css
@@ -1,1165 +1,1557 @@
-@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@700;900&family=Playfair+Display:wght@700&display=swap');
+/* UserPage Styles */
+@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Playfair+Display:wght@400;500;600;700&display=swap');
 
-/* Star Animation Keyframes */
-@keyframes moveX {
-  0% { transform: translateX(-100px); }
-  100% { transform: translateX(calc(100vw + 100px)); }
+/* UserPage specific styles */
+.user-page {
+  margin: 0;
+  padding: 0;
+  font-family: 'Inter', sans-serif;
+  background: linear-gradient(135deg, #fdf2f8 0%, #fce7f3 50%, #f3e8ff 100%);
+  min-height: 100vh;
+  color: #1f2937;
+  box-sizing: border-box;
 }
 
-@keyframes moveY {
-  0% { transform: translateY(-100px); }
-  100% { transform: translateY(calc(100vh + 100px)); }
+/* Star background styling */
+.star-bg {
+  position: fixed;
+  inset: 0;
+  pointer-events: none;
+  width: 100vw;
+  height: 100vh;
+  z-index: 1000; /* on top of everything */
+  mix-blend-mode: lighten; /* stars blend with background, disappear on white */
+}
+
+.star-bg img {
+  will-change: transform, opacity;
+  filter: drop-shadow(0 2px 8px #b7e6e0);
 }
 
+/* Keyframes for star movement */
+@keyframes moveX {
+  0% { transform: translateX(0); }
+  100% { transform: translateX(60px); }
+}
+@keyframes moveY {
+  0% { transform: translateY(0); }
+  100% { transform: translateY(60px); }
+}
 @keyframes moveXY {
-  0% { transform: translateX(-100px) translateY(-100px); }
-  100% { transform: translateX(calc(100vw + 100px)) translateY(calc(100vh + 100pxgit )); }
+  0% { transform: translate(0,0); }
+  100% { transform: translate(40px, 40px); }
 }
 
-body, .scrapbook-user-page {
-  font-family: 'Montserrat', Arial, sans-serif;
-  background: #faf7f4;
+/* Main Container */
+.user-page {
+  font-family: "'EB Garamond', serif";
+  display: flex;
+  flex-direction: column;
+  align-items: center;
+  min-height: 100vh;
+  background: linear-gradient(135deg, #fdf2f8 0%, #fce7f3 50%, #f3e8ff 100%);
+  position: relative;
+  overflow: hidden;
   margin: 0;
   padding: 0;
+  box-sizing: border-box;
 }
 
-.scrapbook-user-page {
-  max-width: 1200px;
-  margin: 48px auto;
-  background: #fff;
-  border-radius: 32px;
-  box-shadow: 0 8px 40px 0 #00000018, 0 2px 8px #e0bfff11;
-  padding: 56px 56px 40px 56px;
-  position: relative;
-  overflow: visible;
-  display: grid;
-  grid-template-columns: 1.2fr 1fr 1.2fr;
-  gap: 48px;
+/* Logo Overlay */
+.logo-overlay {
+  position: fixed;
+  top: -28px;
+  left: 10px;
+  z-index: 1001;
+  cursor: pointer;
+  transition: transform 0.3s ease;
 }
 
-.scrapbook-title {
-  grid-column: 1 / -1;
-  font-family: 'Playfair Display', serif;
-  font-size: 3.2rem;
-  font-weight: 700;
-  letter-spacing: 0.12em;
-  color: #181818;
-  margin-bottom: 32px;
-  text-align: center;
-  text-transform: uppercase;
-  line-height: 1.1;
-  position: relative;
-  z-index: 2;
+.logo-overlay:hover {
+  transform: scale(1.05);
 }
 
-.scrapbook-main {
-  grid-column: 1 / -1;
-  display: grid;
-  grid-template-columns: 1.2fr 1fr 1.2fr;
-  gap: 48px;
-  align-items: flex-start;
+.logo-overlay img {
+  width: 200px;
+  height: auto;
+  object-fit: contain;
+  filter: drop-shadow(0 2px 8px rgba(139, 92, 246, 0.3));
+}
+
+/* Navigation Bar */
+.navbar {
+  position: fixed;
+  top: 0;
+  left: 0;
+  right: 0;
+  background: linear-gradient(135deg, #f3e8ff 0%, #e9d5ff 100%);
+  backdrop-filter: blur(10px);
+  border-bottom: 2px solid #a78bfa;
+  z-index: 1000;
+  padding: 12px 0;
+  width: 100%;
+  box-shadow: 0 2px 12px rgba(139, 92, 246, 0.15);
+  transition: all 0.3s ease;
 }
 
-.scrapbook-main.chat-mode {
-  grid-template-columns: 1fr 1.5fr;
+.navbar.build-mode {
+  background: linear-gradient(135deg, #e0f2fe 0%, #bae6fd 100%);
+  border-bottom: 2px solid #38bdf8;
+  box-shadow: 0 2px 12px rgba(56, 189, 248, 0.2);
 }
 
-/* Magazine-style avatar/closet section */
-.scrapbook-figure-box {
-  background: #fff;
-  border: 6px solid #181818;
-  border-radius: 32px;
-  width: 340px;
-  height: 520px;
+.navbar-content {
   display: flex;
+  justify-content: space-between;
   align-items: center;
-  justify-content: center;
+  width: 100%;
+  margin: 0;
+  padding: 0 24px;
+  box-sizing: border-box;
+  max-width: 1900px;
   margin: 0 auto;
-  box-shadow: 0 8px 32px #00000018, 0 2px 8px #e0bfff11;
-  position: relative;
-  overflow: visible;
-  flex-shrink: 0;
 }
-.scrapbook-figure-box.drag-over {
-  background: #f7e8ff !important;
-  border-color: #bfae9e !important;
-  box-shadow: 0 0 0 8px #e0bfff33, 0 8px 32px #00000018;
-  transition: background 0.2s, border-color 0.2s, box-shadow 0.2s;
+
+.navbar-title {
+  font-family: 'Poppins', sans-serif;
+  font-weight: 700;
+  font-size: 18px;
+  color: #7c3aed;
+  text-align: left;
+  margin: 0;
+  letter-spacing: 0.5px;
+  margin-left: 200px;
+  transition: color 0.3s ease;
+}
+
+.navbar.build-mode .navbar-title {
+  color: #0284c7;
 }
 
-.avatar-overlay-container {
-  position: relative;
-  width: 320px;
-  height: 500px;
+.navbar-left {
   display: flex;
   align-items: center;
-  justify-content: center;
-}
-.avatar-img {
-  width: 320px;
-  height: 500px;
-  object-fit: contain;
-  display: block;
-  z-index: 1;
-  border-radius: 24px;
-  box-shadow: 0 2px 24px #00000018;
-  background: #f8f8f8;
-}
-.avatar-clothes-svg {
-  position: absolute;
-  top: 0;
-  left: 0;
-  width: 320px;
-  height: 500px;
-  pointer-events: none;
-  z-index: 2;
 }
 
-.avatar-clothes-img {
-  position: absolute;
-  top: 35%;
-  left: 50%;
-  width: 200px;
-  height: 200px;
-  transform: translate(-50%, -50%);
+.navbar-logo {
+  width: 120px;
+  height: auto;
   object-fit: contain;
-  z-index: 2;
-  pointer-events: none;
 }
 
-.scrapbook-category-list {
+.navbar-center {
   display: flex;
-  flex-direction: column;
-  gap: 18px;
-  margin-top: 32px;
-  align-items: flex-end;
-}
-.scrapbook-category-btn {
-  background: #fff;
-  border: 2.5px solid #181818;
-  border-radius: 12px;
-  padding: 14px 32px;
-  font-size: 1.15rem;
-  color: #181818;
-  margin-bottom: 2px;
-  cursor: pointer;
-  transition: background 0.2s, box-shadow 0.2s, color 0.2s, border 0.2s;
-  box-shadow: 0 2px 8px #00000011;
-  outline: none;
-  font-family: 'Montserrat', Arial, sans-serif;
-  font-weight: 700;
-  letter-spacing: 0.08em;
-  text-transform: uppercase;
-}
-.scrapbook-category-btn.active, .scrapbook-category-btn:hover {
-  background: #181818;
-  border-color: #bfae9e;
-  color: #fff;
-  box-shadow: 0 2px 12px #bfae9e33;
-}
-
-.scrapbook-clothes-grid {
-  display: grid;
-  grid-template-columns: 1fr 1fr;
-  gap: 32px;
-  background: #fff;
-  border-radius: 18px;
-  padding: 32px 18px 48px 18px;
-  position: relative;
-  min-width: 260px;
-  min-height: 320px;
-  box-shadow: 0 2px 12px #00000011;
+  gap: 16px;
+  align-items: center;
 }
 
-/* Navigation buttons */
 .nav-btn {
-  position: absolute;
-  top: 50%;
-  transform: translateY(-50%);
-  background: #181818;
-  color: #fff;
-  border: none;
-  border-radius: 50%;
-  width: 40px;
-  height: 40px;
-  font-size: 1.2rem;
+  background: rgba(255, 255, 255, 0.1);
+  color: white;
+  border: 1px solid rgba(255, 255, 255, 0.2);
+  border-radius: 20px;
+  font-weight: 600;
+  font-size: 16px;
+  padding: 12px 24px;
   cursor: pointer;
+  transition: all 0.2s ease;
   display: flex;
   align-items: center;
-  justify-content: center;
-  transition: background 0.2s;
-  z-index: 10;
+  gap: 8px;
+  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);
 }
 
-.nav-btn:hover:not(:disabled) {
-  background: #333;
+.nav-btn:hover:not(.disabled) {
+  background: linear-gradient(135deg, #dbeafe 0%, #bfdbfe 100%);
+  transform: translateY(-1px);
+  box-shadow: 0 4px 12px rgba(59, 130, 246, 0.2);
 }
 
-.nav-btn:disabled {
-  background: #ccc;
+/* Build mode navbar button hover */
+.build-mode .nav-btn:hover:not(.disabled) {
+  background: linear-gradient(135deg, #f3e8ff 0%, #e9d5ff 100%);
+  box-shadow: 0 4px 12px rgba(168, 85, 247, 0.2);
+}
+
+.nav-btn.disabled {
+  opacity: 0.6;
   cursor: not-allowed;
 }
 
-.prev-btn {
-  left: 8px;
+.btn-icon {
+  font-size: 18px;
 }
 
-.next-btn {
-  right: 8px;
+.build-btn {
+  background: #fef3c7;
+  color: #92400e;
+  border: none;
 }
 
-.page-indicator {
-  position: absolute;
-  top: 8px;
-  right: 8px;
-  background: rgba(24, 24, 24, 0.8);
-  color: #fff;
-  padding: 4px 8px;
-  border-radius: 12px;
-  font-size: 0.8rem;
-  font-weight: 600;
+.build-btn.disabled {
+  background: #cbd5e1;
+  color: #64748b;
+  cursor: not-allowed;
 }
 
-.scrapbook-clothes-grid.with-categories {
-  display: grid;
-  grid-template-columns: 40px repeat(auto-fill, minmax(160px, 1fr));
-  grid-template-rows: repeat(2, 180px);
-  grid-auto-flow: column;
-  gap: 0 40px;
-  align-items: stretch;
-  width: 100%;
-  height: 360px;
-  min-height: 360px;
-  max-height: 360px;
-  overflow-x: auto;
-  overflow-y: hidden;
-  white-space: nowrap;
-  padding-bottom: 8px;
-  box-sizing: border-box;
+.coins-btn {
+  background: #fbbf24;
+  color: #92400e;
+  border: none;
 }
 
-.grid-category-column {
-  grid-row: 1 / span 100;
-  grid-column: 1;
-  background: none;
-  padding: 0;
-  border-right: none;
-  min-width: 40px;
-  max-width: 40px;
+.chat-btn {
+  background: #e0e7ff;
+  color: #3730a3;
+  border: none;
+}
+
+/* UploadsPage style nav buttons */
+.uploads-nav-buttons {
   display: flex;
-  flex-direction: column;
-  gap: 0;
-  align-items: stretch;
-  height: 100%;
-  justify-content: stretch;
+  gap: 20px;
+  align-items: center;
+  margin-left: auto;
+  margin-right: 0;
+  flex-shrink: 0;
 }
 
-.scrapbook-clothes-grid.with-categories > .scrapbook-clothes-card {
-  align-self: stretch;
+.uploads-nav-buttons button {
+  padding: 10px 16px;
+  border: 2px solid #a78bfa;
+  border-radius: 8px;
+  background: linear-gradient(135deg, #fff 0%, #faf5ff 100%);
+  color: #7c3aed;
+  font-weight: 600;
+  font-family: 'Poppins', sans-serif;
+  cursor: pointer;
+  position: relative;
+  transition: all 0.2s ease;
+  box-shadow: 0 2px 8px rgba(139, 92, 246, 0.1);
 }
 
-.scrapbook-category-btn {
-  width: 50%;
-  min-height: 54px;
-  height: 54px;
-  border-radius: 0;
-  margin: 0;
-  border-bottom: 1.5px solid #181818;
-  border-left: none;
-  border-right: none;
-  border-top: none;
+.uploads-nav-buttons button:hover:not(:disabled) {
+  background: linear-gradient(135deg, #dbeafe 0%, #bfdbfe 100%);
+  transform: translateY(1px);
+  box-shadow: 0 4px 12px rgba(59, 130, 246, 0.2);
+}
+
+.uploads-nav-buttons button:disabled {
+  background: linear-gradient(135deg, #f3f4f6 0%, #e5e7eb 100%);
+  color: #9ca3af;
+  border-color: #d1d5db;
+  cursor: not-allowed;
   box-shadow: none;
+}
+
+.navbar-right {
   display: flex;
   align-items: center;
-  justify-content: flex-start;
-  font-size: 0.8rem;
-  padding-left: 0;
-}
-.scrapbook-category-btn:last-child {
-  border-bottom: none;
+  gap: 16px;
 }
 
-.scrapbook-clothes-card {
-  perspective: 800px;
-  position: relative;
-  background: #faf7f4;
-  border: 2.5px solid #181818;
-  border-radius: 18px;
+.selected-items-display {
+  background: #ede9fe;
+  border: 2px solid #a78bfa;
+  border-radius: 16px;
+  padding: 8px 12px;
+  box-shadow: 0 2px 12px #a78bfa22;
+  font-family: "'EB Garamond', serif";
+  color: #7c3aed;
+  font-weight: 600;
+  font-size: 12px;
+  text-align: left;
   display: flex;
   flex-direction: column;
-  align-items: center;
-  justify-content: center;
-  padding: 18px 8px 14px 8px;
-  box-shadow: 0 2px 8px #00000011;
-  min-width: 110px;
-  min-height: 110px;
-  transition: box-shadow 0.2s, border 0.2s, background 0.2s;
-  font-family: 'Montserrat', Arial, sans-serif;
-  cursor: pointer;
-  width: 160px;
-  height: 180px;
-  min-width: 160px;
-  min-height: 180px;
-  max-width: 160px;
-  max-height: 180px;
-  margin: 0 auto;
+  gap: 2px;
+  min-width: 140px;
+  max-height: fit-content;
+}
+
+.selected-item {
+  font-size: 12px;
+  font-weight: 700;
+}
+
+.selected-status {
+  color: #232323;
+  font-weight: 600;
+}
+
+.coin-balance {
+  background: linear-gradient(135deg, #fef3c7 0%, #fde68a 100%);
+  border: 2px dashed #fbbf24;
+  border-radius: 20px;
+  padding: 12px 20px;
+  box-shadow: 0 4px 16px rgba(245, 158, 11, 0.3);
+  font-family: "'EB Garamond', serif";
+  color: #92400e;
+  font-weight: 700;
+  font-size: 16px;
   display: flex;
   align-items: center;
-  justify-content: center;
-  box-sizing: border-box;
-  grid-row: span 1;
+  gap: 8px;
+  min-width: 120px;
+  position: relative;
+  transition: all 0.3s ease;
 }
-.scrapbook-clothes-card .clothes-card-front,
-.scrapbook-clothes-card .clothes-card-back {
+
+.coin-balance::before {
+  content: '';
   position: absolute;
+  top: -2px;
+  left: -2px;
+  right: -2px;
+  bottom: -2px;
+  background: linear-gradient(45deg, #fef3c7, #fde68a, #fef3c7);
+  border-radius: 20px;
+  z-index: -1;
+  opacity: 0.8;
+}
+
+
+
+.coin-icon {
+  font-size: 20px;
+}
+
+.coin-amount {
+  font-weight: 700;
+}
+
+/* Processing Overlay */
+.processing-overlay {
+  position: fixed;
+  top: 0;
+  left: 0;
+  right: 0;
+  bottom: 0;
   width: 100%;
   height: 100%;
-  left: 0;
-  top: 0;
-  backface-visibility: hidden;
+  background-color: rgba(0, 0, 0, 0.8);
   display: flex;
-  flex-direction: column;
-  align-items: center;
   justify-content: center;
-}
-.scrapbook-clothes-card .clothes-card-front {
-  z-index: 2;
-  background: inherit;
-  display: flex;
-  flex-direction: column;
   align-items: center;
-  justify-content: center;
-  gap: 8px;
-  padding: 12px 8px;
+  z-index: 9999;
+  backdrop-filter: blur(10px);
 }
-.scrapbook-clothes-card .clothes-card-back {
-  transform: rotateY(180deg);
-  z-index: 3;
-  background: #fff;
-  border-radius: 18px;
-  padding: 12px 8px 8px 8px;
-  box-sizing: border-box;
-  /* Fix mirrored content */
+
+.processing-content {
   display: flex;
   flex-direction: column;
   align-items: center;
-  justify-content: center;
-  width: 100%;
-  height: 100%;
+  gap: 24px;
+  text-align: center;
+  color: white;
 }
-.scrapbook-clothes-card.flipped {
-  z-index: 10;
+
+.spinner {
+  width: 80px;
+  height: 80px;
+  border: 6px solid rgba(255, 255, 255, 0.3);
+  border-top: 6px solid #667eea;
+  border-radius: 50%;
+  animation: spin 1s linear infinite;
 }
 
-.scrapbook-clothes-card:not(.flipped) {
-  z-index: 1;
+.processing-text {
+  font-size: 28px;
+  font-weight: bold;
+  color: white;
+  margin-bottom: 8px;
 }
 
-.scrapbook-clothes-card:hover {
-  box-shadow: 0 4px 18px #bfae9e33, 0 2px 8px #00000011;
-  border-color: #bfae9e;
-  background: #fff;
+.processing-subtext {
+  font-size: 18px;
+  color: rgba(255, 255, 255, 0.8);
+  line-height: 1.5;
+  max-width: 500px;
 }
 
-/* Info button for build mode */
-.clothes-info-btn {
-  position: absolute;
-  top: 8px;
-  right: 8px;
-  width: 24px;
-  height: 24px;
-  border-radius: 50%;
-  background: #fff;
-  border: 1.5px solid #181818;
-  font-size: 0.8rem;
-  cursor: pointer;
+/* Main Content */
+.main-content {
   display: flex;
-  align-items: center;
-  justify-content: center;
-  z-index: 10;
-  transition: background 0.2s, border-color 0.2s;
-  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
+  flex-direction: column;
+  width: 95vw;
+  max-width: 1400px;
+  margin: 100px auto 20px auto;
+  background: #fff;
+  border-radius: 32px;
+  box-shadow: 0 4px 32px #e3f6fd44;
+  padding: 24px;
+  height: calc(100vh - 200px);
+  overflow: hidden;
 }
 
-.clothes-info-btn:hover {
-  background: #f7e8ff;
-  border-color: #bfae9e;
-  box-shadow: 0 2px 8px rgba(0,0,0,0.15);
-}
-.scrapbook-clothes-icon {
-  margin-bottom: 10px;
-}
-.scrapbook-clothes-caption {
-  font-size: 1.08rem;
-  color: #181818;
-  margin-top: 4px;
-  font-family: 'Playfair Display', serif;
-  font-style: italic;
-  opacity: 0.85;
-  text-align: center;
-  letter-spacing: 0.04em;
+.content-container {
+  display: flex;
+  flex-direction: column;
+  width: 100%;
+  height: 100%;
+  overflow: hidden;
 }
 
-.scrapbook-add-btn {
-  position: absolute;
-  right: 18px;
-  bottom: 18px;
-  width: 54px;
-  height: 54px;
-  border-radius: 50%;
-  background: #181818;
-  color: #fff;
-  font-size: 2.4rem;
-  border: 2.5px solid #bfae9e;
-  box-shadow: 0 2px 8px #00000022;
-  cursor: pointer;
+/* Category Filter */
+.category-filter {
   display: flex;
-  align-items: center;
   justify-content: center;
-  transition: background 0.2s, box-shadow 0.2s, color 0.2s;
-  z-index: 2;
-  font-family: 'Montserrat', Arial, sans-serif;
-}
-.scrapbook-add-btn:hover {
-  background: #bfae9e;
-  color: #181818;
-  box-shadow: 0 4px 18px #bfae9e33;
+  align-items: center;
+  gap: 16px;
+  margin-bottom: 32px;
+  padding: 16px 0;
+  border-bottom: 1px solid #e5e7eb;
+  position: relative;
 }
 
-.scrapbook-bottom-btns {
-  display: flex;
-  gap: 32px;
-  justify-content: right;
-  margin-top: 48px;
-  grid-column: 1 / -1;
+.category-filter.build-mode {
+  justify-content: flex-end;
 }
 
-.scrapbook-build-btn, .scrapbook-chat-btn {
-  font-size: 1.18rem;
-  padding: 16px 48px;
-  border-radius: 16px;
-  border: 2.5px solid #181818;
-  background: #fff;
-  color: #181818;
-  font-weight: bold;
-  cursor: pointer;
-  box-shadow: 0 2px 8px #00000011;
-  transition: background 0.2s, color 0.2s, border 0.2s;
-  font-family: 'Montserrat', Arial, sans-serif;
-  letter-spacing: 0.08em;
-  text-transform: uppercase;
-}
-.scrapbook-build-btn:hover, .scrapbook-chat-btn:hover {
-  background: #181818;
-  color: #fff;
-  border-color: #bfae9e;
-}
-
-.avatar-clothes-overlay {
-  position: absolute;
-  top: 0;
-  left: 0;
-  width: 320px;
-  height: 500px;
-  pointer-events: none;
-  z-index: 3;
-}
-.avatar-remove-btn {
+/* Build Mode Status Container */
+.build-status-container {
   position: absolute;
-  top: 10px;
-  right: 10px;
-  width: 32px;
-  height: 32px;
-  border-radius: 50%;
-  background: #fff;
-  color: #181818;
-  border: 2px solid #bfae9e;
-  font-size: 1.2rem;
-  font-weight: bold;
-  box-shadow: 0 2px 8px #00000022;
-  cursor: pointer;
+  top: 50%;
+  left: 80px;
+  transform: translateY(-50%);
   z-index: 10;
-  pointer-events: auto;
-  display: flex;
-  align-items: center;
-  justify-content: center;
-  transition: background 0.2s, color 0.2s, border 0.2s;
 }
-.avatar-remove-btn:hover {
-  background: #181818;
-  color: #fff;
-  border-color: #bfae9e;
+
+/* Build Mode Status Popup */
+.build-status-popup {
+  background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);
+  border: 2px solid #7dd3fc;
+  border-radius: 12px;
+  padding: 12px 16px;
+  box-shadow: 0 4px 16px rgba(56, 189, 248, 0.2);
+  min-width: 200px;
 }
 
-.avatar-tags-row {
+.build-status-content {
   display: flex;
-  gap: 16px;
-  justify-content: center;
-  margin-top: 18px;
-  flex-wrap: wrap;
-}
-.avatar-tag {
-  display: inline-flex;
-  align-items: center;
-  background: #faf7f4;
-  border: 2px solid #bfae9e;
-  border-radius: 18px;
-  padding: 7px 18px 7px 16px;
-  font-size: 1.08rem;
-  color: #181818;
-  font-family: 'Montserrat', Arial, sans-serif;
-  font-weight: 700;
-  letter-spacing: 0.04em;
-  box-shadow: 0 2px 8px #00000011;
-  margin-bottom: 4px;
+  flex-direction: column;
+  gap: 8px;
 }
-.avatar-tag-remove {
-  background: none;
-  border: none;
-  color: #bfae9e;
-  font-size: 1.1rem;
-  font-weight: bold;
-  margin-left: 8px;
-  cursor: pointer;
-  border-radius: 50%;
-  width: 22px;
-  height: 22px;
+
+.build-status-item {
   display: flex;
+  justify-content: space-between;
   align-items: center;
-  justify-content: center;
-  transition: background 0.2s, color 0.2s;
+  gap: 12px;
 }
-.avatar-tag-remove:hover {
-  background: #bfae9e;
-  color: #fff;
+
+.build-status-label {
+  font-size: 14px;
+  font-weight: 600;
+  color: #0284c7;
 }
 
-.clothes-info-tags {
-  display: flex;
-  gap: 6px;
-  flex-wrap: wrap;
-  margin-bottom: 8px;
-  justify-content: center;
+.build-status-value {
+  font-size: 14px;
+  font-weight: 700;
+  color: #374151;
 }
-.clothes-info-tag {
-  background: #f7e8ff;
-  color: #181818;
-  border-radius: 8px;
-  padding: 2px 8px;
-  font-size: 0.8rem;
-  font-family: 'Montserrat', Arial, sans-serif;
+
+.category-btn {
+  background: transparent;
+  color: #232323;
+  border: 1px solid #d1d5db;
+  border-radius: 20px;
   font-weight: 600;
-  letter-spacing: 0.03em;
+  font-size: 14px;
+  padding: 8px 16px;
+  cursor: pointer;
+  transition: all 0.2s ease;
+  min-width: fit-content;
 }
-.clothes-info-desc-edit {
-  width: 100%;
-  min-height: 80px;
-  border: 1.5px solid #bfae9e;
-  border-radius: 10px;
-  font-size: 0.85rem;
-  font-family: 'Montserrat', Arial, sans-serif;
-  padding: 8px 10px;
-  margin-top: 6px;
-  background: #faf7f4;
-  color: #181818;
-  resize: vertical;
-  box-sizing: border-box;
-  transition: border 0.2s, background 0.2s;
-  line-height: 1.4;
-  text-align: center;
+
+.category-btn:hover {
+  background: linear-gradient(135deg, #fce7f3 0%, #fbcfe8 100%);
+  border-color: #ec4899;
+  color: #be185d;
+  transform: translateY(-1px);
+  box-shadow: 0 4px 12px rgba(236, 72, 153, 0.2);
 }
-.clothes-info-desc-edit:focus {
-  outline: none;
-  border: 2px solid #181818;
-  background: #fff;
-  box-shadow: inset 0 2px 4px rgba(0,0,0,0.1);
+
+.category-btn.active {
+  background: #e0e7ff;
+  color: #3730a3;
+  border-color: #7c3aed;
+  box-shadow: 0 2px 8px rgba(99, 102, 241, 0.2);
 }
 
-/* Container for clothes grid and description */
-.clothes-and-description-container {
+.try-on-btn {
+  background: linear-gradient(135deg, #dbeafe 0%, #bfdbfe 100%);
+  color: #1e40af;
+  border: 2px solid #3b82f6;
+  border-radius: 20px;
+  font-weight: 600;
+  font-size: 14px;
+  padding: 8px 16px;
+  cursor: pointer;
+  transition: all 0.3s ease;
+  min-width: 120px;
+  height: 45px;
   display: flex;
-  flex-direction: column;
-  gap: 24px;
-  align-items: flex-start;
+  align-items: center;
+  justify-content: center;
+  box-shadow: 0 4px 12px rgba(59, 130, 246, 0.2);
+  position: relative;
+  overflow: hidden;
 }
 
-/* Build mode description display */
-.build-mode-description {
-  background: #fff;
-  border: 2.5px solid #181818;
-  border-radius: 16px;
-  padding: 20px;
-  box-shadow: 0 4px 16px rgba(0,0,0,0.1);
+.try-on-btn::before {
+  content: '';
+  position: absolute;
+  top: 0;
+  left: -100%;
   width: 100%;
-  max-width: 600px;
-  margin-top: 0;
+  height: 100%;
+  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
+  transition: left 0.5s;
 }
 
-.description-header {
-  display: flex;
-  justify-content: space-between;
-  align-items: center;
-  margin-bottom: 16px;
-  padding-bottom: 12px;
-  border-bottom: 2px solid #f0f0f0;
+.try-on-btn:hover::before {
+  left: 100%;
 }
 
-.description-header h3 {
-  font-family: 'Playfair Display', serif;
-  font-size: 1.4rem;
-  color: #181818;
-  margin: 0;
-  font-weight: 700;
+.try-on-btn:hover:not(.disabled) {
+  background: linear-gradient(135deg, #fce7f3 0%, #fbcfe8 100%);
+  color: #be185d;
+  transform: translateY(-1px);
+  box-shadow: 0 4px 12px rgba(236, 72, 153, 0.2);
 }
 
-.close-description-btn {
-  background: none;
-  border: none;
-  font-size: 1.2rem;
-  color: #bfae9e;
-  cursor: pointer;
-  padding: 4px;
-  border-radius: 50%;
-  width: 28px;
-  height: 28px;
-  display: flex;
-  align-items: center;
-  justify-content: center;
-  transition: background 0.2s, color 0.2s;
+.try-on-btn.disabled {
+  opacity: 0.6;
+  cursor: not-allowed;
+  transform: none;
 }
 
-.close-description-btn:hover {
-  background: #f7e8ff;
-  color: #181818;
+/* Content Area */
+.content-area {
+  display: flex;
+  flex-direction: row;
+  align-items: flex-start;
+  gap: 24px;
+  flex: 1;
+  overflow: visible;
+  min-height: 0;
 }
 
-.description-content {
+/* Avatar Section */
+.avatar-section {
+  flex: 0 0 240px;
   display: flex;
   flex-direction: column;
-  gap: 12px;
+  align-items: center;
+  position: relative;
+  min-height: 0;
 }
 
-.description-tags {
+.user-avatar-container {
   display: flex;
-  gap: 8px;
-  flex-wrap: wrap;
+  flex-direction: column;
+  align-items: center;
+  position: relative;
 }
 
-.description-tag {
-  background: #f7e8ff;
-  color: #181818;
-  border-radius: 8px;
-  padding: 4px 10px;
-  font-size: 0.85rem;
-  font-family: 'Montserrat', Arial, sans-serif;
-  font-weight: 600;
-  letter-spacing: 0.03em;
+.avatar-wrapper {
+  position: relative;
+  background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);
+  border: 2px dashed #7dd3fc;
+  border-radius: 20px;
+  padding: 16px;
+  box-shadow: 0 4px 16px rgba(125, 211, 252, 0.2);
+  transform: rotate(-1deg);
+  transition: all 0.3s ease;
 }
 
-.description-text {
-  font-size: 0.95rem;
-  color: #181818;
-  font-family: 'Montserrat', Arial, sans-serif;
-  line-height: 1.5;
-  text-align: left;
+.avatar-wrapper::before {
+  content: '';
+  position: absolute;
+  top: -8px;
+  left: 20px;
+  width: 40px;
+  height: 20px;
+  background: linear-gradient(135deg, #bae6fd 0%, #7dd3fc 100%);
+  border: 1px solid #38bdf8;
+  border-radius: 4px;
+  transform: rotate(15deg);
+  z-index: 2;
+  box-shadow: 0 2px 8px rgba(56, 189, 248, 0.3);
 }
 
-@media (max-width: 1200px) {
-  .scrapbook-user-page {
-    max-width: 99vw;
-    padding: 18px 2vw 18px 2vw;
-    grid-template-columns: 1fr;
-    gap: 24px;
-  }
-  .scrapbook-main {
-    grid-template-columns: 1fr;
-    gap: 24px;
-  }
-  .scrapbook-figure-box {
-    width: 90vw;
-    max-width: 340px;
-    height: 60vw;
-    max-height: 520px;
-  }
-  .avatar-overlay-container {
-    width: 90vw;
-    max-width: 320px;
-    height: 60vw;
-    max-height: 500px;
-  }
-  .avatar-img, .avatar-clothes-svg {
-    width: 90vw;
-    max-width: 320px;
-    height: 60vw;
-    max-height: 500px;
-  }
-  .avatar-clothes-img {
-    width: 150px;
-    height: 150px;
-  }
+.avatar-wrapper::after {
+  content: '';
+  position: absolute;
+  top: 15px;
+  right: 30px;
+  width: 30px;
+  height: 15px;
+  background: linear-gradient(135deg, #bae6fd 0%, #7dd3fc 100%);
+  border: 1px solid #38bdf8;
+  border-radius: 4px;
+  transform: rotate(-10deg);
+  z-index: 2;
+  box-shadow: 0 2px 8px rgba(56, 189, 248, 0.3);
 }
 
-.avatar-clothes-svg.clickable {
-  cursor: pointer;
-  transition: opacity 0.2s;
+.avatar-wrapper:hover {
+  transform: translateY(-4px) rotate(0deg);
+  box-shadow: 0 8px 24px rgba(56, 189, 248, 0.3);
 }
-.avatar-clothes-svg.clickable:hover {
-  opacity: 0.7;
+
+/* Build mode avatar styling */
+.build-mode .avatar-wrapper {
+  background: linear-gradient(135deg, #faf5ff 0%, #f3e8ff 100%);
+  border: 2px dashed #c084fc;
+  box-shadow: 0 4px 16px rgba(192, 132, 252, 0.2);
 }
 
-/* Remove chips row and chip styles */
-.avatar-chips-row, .avatar-chip, .avatar-chip-remove {
-  display: none !important;
+.build-mode .avatar-wrapper::before {
+  background: linear-gradient(135deg, #e9d5ff 0%, #c084fc 100%);
+  border: 1px solid #a855f7;
+  box-shadow: 0 2px 8px rgba(168, 85, 247, 0.3);
 }
 
-.avatar-accessory-img {
-  position: absolute;
-  left: 50%;
-  top: 60%;
-  width: 80px;
-  height: 80px;
-  transform: translate(-50%, -50%);
-  z-index: 3;
-  pointer-events: none;
+.build-mode .avatar-wrapper::after {
+  background: linear-gradient(135deg, #e9d5ff 0%, #c084fc 100%);
+  border: 1px solid #a855f7;
+  box-shadow: 0 2px 8px rgba(168, 85, 247, 0.3);
 }
 
-/* Chat Interface Styles */
-.chat-container {
+.build-mode .avatar-wrapper:hover {
+  box-shadow: 0 8px 24px rgba(168, 85, 247, 0.3);
+}
+
+.avatar-image {
+  width: 280px;
+  height: 560px;
+  border-radius: 8px;
+  object-fit: cover;
+  border: 2px solid #7dd3fc;
+  margin-bottom: 12px;
   background: #fff;
-  border: 2.5px solid #181818;
-  border-radius: 16px;
-  box-shadow: 0 4px 16px rgba(0,0,0,0.1);
-  overflow: hidden;
-  height: 520px;
-  display: flex;
-  flex-direction: column;
+  display: block;
+  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
+  transform: rotate(1deg);
+  transition: all 0.3s ease;
+  position: relative;
 }
 
-.chat-header {
-  background: #181818;
-  color: #fff;
-  padding: 16px 20px;
-  display: flex;
-  justify-content: space-between;
-  align-items: center;
+.avatar-image::before {
+  content: '';
+  position: absolute;
+  top: -5px;
+  left: 10px;
+  width: 25px;
+  height: 12px;
+  background: linear-gradient(135deg, #bae6fd 0%, #7dd3fc 100%);
+  border: 1px solid #38bdf8;
+  border-radius: 2px;
+  transform: rotate(20deg);
+  z-index: 1;
+  box-shadow: 0 1px 4px rgba(56, 189, 248, 0.4);
 }
 
-.chat-header h3 {
-  font-family: 'Playfair Display', serif;
-  font-size: 1.2rem;
-  margin: 0;
-  font-weight: 700;
+/* Build mode avatar image styling */
+.build-mode .avatar-image {
+  border: 2px solid #c084fc;
 }
 
-.close-chat-btn {
-  background: none;
-  border: none;
-  color: #fff;
-  font-size: 1.2rem;
-  cursor: pointer;
-  padding: 4px;
-  border-radius: 50%;
-  width: 28px;
-  height: 28px;
+.build-mode .avatar-image::before {
+  background: linear-gradient(135deg, #e9d5ff 0%, #c084fc 100%);
+  border: 1px solid #a855f7;
+  box-shadow: 0 1px 4px rgba(168, 85, 247, 0.4);
+}
+
+.avatar-placeholder {
+  width: 280px;
+  height: 560px;
+  border-radius: 8px;
+  border: 2px dashed #7dd3fc;
+  background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);
+  margin-bottom: 12px;
   display: flex;
   align-items: center;
   justify-content: center;
-  transition: background 0.2s;
+  color: #38bdf8;
+  font-size: 64px;
+  font-weight: 600;
+  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
+  transform: rotate(-1deg);
+  transition: all 0.3s ease;
+  position: relative;
 }
 
-.close-chat-btn:hover {
-  background: rgba(255,255,255,0.1);
+.avatar-placeholder::before {
+  content: '';
+  position: absolute;
+  top: -5px;
+  right: 10px;
+  width: 25px;
+  height: 12px;
+  background: linear-gradient(135deg, #bae6fd 0%, #7dd3fc 100%);
+  border: 1px solid #38bdf8;
+  border-radius: 2px;
+  transform: rotate(-15deg);
+  z-index: 1;
+  box-shadow: 0 1px 4px rgba(56, 189, 248, 0.4);
 }
 
-.chat-messages {
-  padding: 20px;
-  flex: 1;
-  overflow-y: auto;
-  display: flex;
-  flex-direction: column;
-  gap: 12px;
+/* Build mode avatar placeholder styling */
+.build-mode .avatar-placeholder {
+  border: 2px dashed #c084fc;
+  background: linear-gradient(135deg, #faf5ff 0%, #f3e8ff 100%);
+  color: #a855f7;
 }
 
-.chat-welcome {
-  text-align: center;
-  color: #666;
-  font-style: italic;
-  padding: 20px;
+.build-mode .avatar-placeholder::before {
+  background: linear-gradient(135deg, #e9d5ff 0%, #c084fc 100%);
+  border: 1px solid #a855f7;
+  box-shadow: 0 1px 4px rgba(168, 85, 247, 0.4);
 }
 
-.chat-message {
+.avatar-action-buttons {
+  position: absolute;
+  top: 12px;
+  left: 12px;
   display: flex;
-  margin-bottom: 8px;
+  gap: 8px;
 }
 
-.chat-message.user {
-  justify-content: flex-end;
+.avatar-recurring-button {
+  position: absolute;
+  top: 12px;
+  right: 12px;
+  z-index: 20;
 }
 
-.chat-message.assistant {
-  justify-content: flex-start;
+.avatar-recurring-button.build-mode {
+  top: 8px;
+  right: 8px;
 }
 
-.message-content {
-  max-width: 85%;
-  padding: 12px 16px;
-  border-radius: 18px;
-  font-size: 0.9rem;
-  line-height: 1.4;
+.avatar-heart-button {
+  position: absolute;
+  top: 12px;
+  left: 60px;
+  z-index: 20;
 }
 
-.chat-message.user .message-content {
-  background: #181818;
-  color: #fff;
-  border-bottom-right-radius: 4px;
+.avatar-heart-button.build-mode {
+  top: 8px;
+  left: 50px;
 }
 
-.chat-message.assistant .message-content {
-  background: #f7e8ff;
-  color: #181818;
-  border-bottom-left-radius: 4px;
+.avatar-action-btn {
+  background: linear-gradient(135deg, #bae6fd 0%, #7dd3fc 100%);
+  color: #0284c7;
+  border: 2px solid #38bdf8;
+  border-radius: 50%;
+  width: 40px;
+  height: 40px;
+  font-size: 18px;
+  cursor: pointer;
+  display: flex;
+  align-items: center;
+  justify-content: center;
+  box-shadow: 0 2px 8px rgba(56, 189, 248, 0.3);
+  transition: all 0.3s ease;
+  transform: rotate(2deg);
 }
 
-.chat-input-container {
-  padding: 16px 20px;
-  border-top: 1px solid #f0f0f0;
-  display: flex;
-  gap: 12px;
-  align-items: flex-end;
+.avatar-action-btn:hover {
+  transform: scale(1.1);
+  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2);
 }
 
-.chat-input {
-  flex: 1;
-  border: 1.5px solid #bfae9e;
-  border-radius: 20px;
-  padding: 12px 16px;
-  font-size: 0.9rem;
-  font-family: 'Montserrat', Arial, sans-serif;
-  resize: none;
-  min-height: 40px;
-  max-height: 100px;
-  outline: none;
-  transition: border 0.2s;
+.favorite-btn {
+  background: linear-gradient(135deg, #bae6fd 0%, #7dd3fc 100%);
+  color: #0284c7;
+  border: 2px solid #38bdf8;
 }
 
-.chat-input:focus {
-  border-color: #181818;
+.worn-btn {
+  background: linear-gradient(135deg, #bae6fd 0%, #7dd3fc 100%);
+  color: #0284c7;
+  border: 2px solid #38bdf8;
 }
 
-.chat-input:disabled {
-  background: #f5f5f5;
-  color: #999;
+.recurring-btn {
+  background: linear-gradient(135deg, #dcfce7 0%, #bbf7d0 100%);
+  color: #15803d;
+  border: 2px solid #4ade80;
 }
 
-.send-btn {
-  background: #181818;
-  color: #fff;
-  border: none;
-  border-radius: 20px;
-  padding: 12px 20px;
-  font-size: 0.9rem;
-  font-family: 'Montserrat', Arial, sans-serif;
-  font-weight: 600;
-  cursor: pointer;
-  transition: background 0.2s;
-  min-width: 60px;
+.username {
+  font-weight: bold;
+  color: #374151;
+  font-size: 18px;
+  background: linear-gradient(135deg, #fef3c7 0%, #fde68a 100%);
+  border: 1px solid #fbbf24;
+  border-radius: 6px;
+  padding: 8px 16px;
+  display: inline-block;
+  position: relative;
+  transform: rotate(-2deg);
+  box-shadow: 0 2px 8px rgba(245, 158, 11, 0.3);
+  margin-top: -15px;
+  font-family: 'Inter', sans-serif;
+  letter-spacing: 0.5px;
 }
 
-.send-btn:hover:not(:disabled) {
-  background: #333;
+.username::before {
+  content: '';
+  position: absolute;
+  top: -3px;
+  left: 8px;
+  width: 20px;
+  height: 8px;
+  background: linear-gradient(135deg, #fef3c7 0%, #fde68a 100%);
+  border: 1px solid #fbbf24;
+  border-radius: 2px;
+  transform: rotate(15deg);
+  z-index: 1;
+  box-shadow: 0 1px 4px rgba(245, 158, 11, 0.4);
 }
 
-.send-btn:disabled {
-  background: #ccc;
-  cursor: not-allowed;
+.username::after {
+  content: '';
+  position: absolute;
+  top: 2px;
+  right: 12px;
+  width: 15px;
+  height: 6px;
+  background: linear-gradient(135deg, #fef3c7 0%, #fde68a 100%);
+  border: 1px solid #fbbf24;
+  border-radius: 2px;
+  transform: rotate(-10deg);
+  z-index: 1;
+  box-shadow: 0 1px 4px rgba(245, 158, 11, 0.4);
 }
 
-.typing-indicator {
+.avatar-buttons-container {
   display: flex;
-  gap: 4px;
+  gap: 12px;
+  margin-top: 12px;
+  justify-content: center;
   align-items: center;
 }
 
-.typing-indicator span {
-  width: 8px;
-  height: 8px;
-  border-radius: 50%;
-  background: #bfae9e;
-  animation: typing 1.4s infinite ease-in-out;
-}
-
-.typing-indicator span:nth-child(1) {
-  animation-delay: -0.32s;
+.ai-generated-badge {
+  background: linear-gradient(135deg, #f0fdf4 0%, #dcfce7 100%);
+  color: #15803d;
+  padding: 8px 16px;
+  border-radius: 20px;
+  font-size: 12px;
+  font-weight: 600;
+  text-align: center;
+  box-shadow: 0 2px 8px rgba(34, 197, 94, 0.15);
+  border: 2px solid #4ade80;
+  transition: all 0.3s ease;
+  position: relative;
+  overflow: hidden;
 }
 
-.typing-indicator span:nth-child(2) {
-  animation-delay: -0.16s;
+.ai-generated-badge::before {
+  content: '';
+  position: absolute;
+  top: 0;
+  left: -100%;
+  width: 100%;
+  height: 100%;
+  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
+  transition: left 0.5s;
 }
 
-@keyframes typing {
-  0%, 80%, 100% {
-    transform: scale(0.8);
-    opacity: 0.5;
-  }
-  40% {
-    transform: scale(1);
-    opacity: 1;
-  }
+.ai-generated-badge:hover::before {
+  left: 100%;
 }
 
-.scrapbook-chat-btn.active {
-  background: #181818;
-  color: #fff;
+.revert-avatar-btn {
+  background: linear-gradient(135deg, #fecaca 0%, #fca5a5 100%);
+  color: #dc2626;
+  border: 2px solid #f87171;
+  border-radius: 20px;
+  padding: 8px 16px;
+  font-size: 12px;
+  font-weight: 600;
+  cursor: pointer;
+  transition: all 0.3s ease;
+  position: relative;
+  overflow: hidden;
+  box-shadow: 0 2px 8px rgba(239, 68, 68, 0.2);
 }
 
-.modal-overlay {
-  position: fixed;
+.revert-avatar-btn::before {
+  content: '';
+  position: absolute;
   top: 0;
-  left: 0;
-  width: 100vw;
-  height: 100vh;
-  background: rgba(180, 160, 255, 0.18);
-  display: flex;
-  align-items: center;
-  justify-content: center;
-  z-index: 9999;
-  backdrop-filter: blur(2px);
-}
-.modal-content {
-  background: linear-gradient(135deg, #f7f0ff 60%, #e0e7ff 100%);
-  border-radius: 22px;
-  padding: 36px 28px 28px 28px;
-  box-shadow: 0 8px 32px rgba(120, 80, 200, 0.18), 0 2px 8px rgba(0,0,0,0.08);
-  min-width: 340px;
-  max-width: 95vw;
+  left: -100%;
+  width: 100%;
+  height: 100%;
+  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
+  transition: left 0.5s;
+}
+
+.revert-avatar-btn:hover::before {
+  left: 100%;
+}
+
+.revert-avatar-btn:hover {
+  transform: translateY(-2px);
+  box-shadow: 0 4px 12px rgba(239, 68, 68, 0.3);
+}
+
+.moving-text-container {
+  margin-top: 24px;
+  width: 100%;
   text-align: center;
-  border: 3px dashed #bfae9e;
-  animation: popIn 0.25s cubic-bezier(.68,-0.55,.27,1.55);
+  overflow: hidden;
+  white-space: nowrap;
+  font-weight: 700;
+  font-size: 22px;
+  color: #7c3aed;
+  letter-spacing: 1px;
   position: relative;
-  overflow: visible;
+  font-family: "'EB Garamond', serif";
 }
-@keyframes popIn {
-  0% { transform: scale(0.85); opacity: 0; }
-  100% { transform: scale(1); opacity: 1; }
-}
-.modal-content h2 {
-  font-family: 'Playfair Display', 'Patrick Hand', cursive, serif;
-  color: #bfae9e;
-  margin-bottom: 18px;
-  font-size: 1.7rem;
-  letter-spacing: 0.04em;
-  text-shadow: 1px 1px 0 #fff0f5, 2px 2px 0 #e0e7ff;
-}
-.modal-content input,
-.modal-content textarea,
-.modal-content select {
-  width: 90%;
-  margin: 0 auto 12px auto;
-  padding: 10px 12px;
-  border-radius: 10px;
-  border: 2px dashed #bfae9e;
-  background: #f9f6ff;
-  font-size: 1rem;
-  outline: none;
-  transition: border 0.2s;
-  box-shadow: 0 1px 4px rgba(124,77,255,0.04);
-  font-family: 'Montserrat', Arial, sans-serif;
-}
-.modal-content input:focus,
-.modal-content textarea:focus,
-.modal-content select:focus {
-  border: 2px solid #a18cd1;
-}
-.modal-content button {
-  background: linear-gradient(90deg, #f7e8ff 0%, #bfae9e 100%);
-  color: #7c4dff;
-  border: 2px dashed #bfae9e;
-  border-radius: 12px;
-  padding: 10px 28px;
-  font-size: 1.1rem;
-  font-family: 'Montserrat', Arial, sans-serif;
-  margin-top: 10px;
-  cursor: pointer;
-  box-shadow: 0 2px 8px #bfae9e33;
-  transition: background 0.18s, transform 0.12s, color 0.18s;
-  font-weight: 700;
-  letter-spacing: 0.04em;
+
+.moving-text {
+  display: inline-block;
+  animation: moveText 15s linear infinite;
 }
-.modal-content button:active {
-  transform: scale(0.97);
+
+/* Clothing Section */
+.clothing-section {
+  flex: 1;
+  display: flex;
+  flex-direction: column;
+  min-height: 0;
+  overflow: visible;
+  position: relative;
 }
-.modal-content img {
-  border-radius: 12px;
+
+.section-title {
+  font-size: 20px;
+  font-weight: 600;
+  color: #374151;
   margin-bottom: 12px;
-  box-shadow: 0 2px 8px #bfae9e33;
-  border: 2.5px dashed #bfae9e;
-  background: #f7f0ff;
+  text-align: left;
+  position: relative;
+  padding-top: 8px;
 }
-.modal-sticker {
+
+.item-count {
   position: absolute;
-  top: -24px;
-  left: -24px;
-  background: #fff0f5;
-  border: 2.5px dashed #ffb6c1;
-  color: #c71585;
-  font-family: 'Patrick Hand', cursive;
-  font-size: 1.1rem;
-  padding: 8px 16px;
-  border-radius: 12px;
-  box-shadow: 2px 2px 0 #f8c8dc;
-  transform: rotate(-7deg);
-  z-index: 10;
+  top: 0;
+  right: 0;
+  font-size: 14px;
+  color: #6b7280;
+  font-weight: 500;
 }
-.modal-close-btn {
+
+.closet-grid {
+  display: grid;
+  grid-template-columns: repeat(2, 1fr);
+  gap: 12px;
+  height: 600px;
+  overflow-y: auto;
+  padding: 12px;
+  border: 2px dashed #fbcfe8;
+  border-radius: 20px;
+  background: linear-gradient(135deg, #fdf2f8 0%, #fce7f3 100%);
+  justify-content: center;
+  align-items: start;
+  position: relative;
+  box-shadow: 0 4px 16px rgba(236, 72, 153, 0.1);
+}
+
+.add-item-overlay-btn {
   position: absolute;
-  top: 10px;
-  right: 10px;
-  background: #fff0f5;
-  border: 2px dashed #bfae9e;
-  color: #bfae9e;
-  font-size: 1.3rem;
+  bottom: 16px;
+  right: 16px;
+  width: 60px;
+  height: 60px;
   border-radius: 50%;
-  width: 36px;
-  height: 36px;
+  background: linear-gradient(135deg, #fce7f3 0%, #fbcfe8 100%);
+  color: #ec4899;
+  font-size: 32px;
+  font-weight: 700;
+  border: 3px solid #ec4899;
+  cursor: pointer;
+  box-shadow: 0 4px 16px rgba(236, 72, 153, 0.2);
   display: flex;
   align-items: center;
   justify-content: center;
-  cursor: pointer;
-  box-shadow: 1px 1px 0 #f8c8dc;
-  font-family: 'Patrick Hand', cursive;
-  transition: background 0.18s, color 0.18s;
-  z-index: 20;
+  z-index: 1000;
+  transition: all 0.3s ease;
 }
-.modal-close-btn:hover {
-  background: #ffe4fa;
-  color: #7c4dff;
+
+.add-item-overlay-btn:hover {
+  transform: scale(1.15) rotate(5deg);
+  box-shadow: 0 8px 24px rgba(236, 72, 153, 0.3);
+  background: linear-gradient(135deg, #fdf2f8 0%, #fce7f3 100%);
 }
 
-/* Generated image styles */
-.generated-image {
-  max-width: 100%;
-  max-height: 300px;
-  border-radius: 12px;
-  margin-top: 12px;
-  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
-  border: 2px solid #e0bfff;
-  background: #fff;
+@keyframes bounce {
+  0%, 20%, 50%, 80%, 100% {
+    transform: translateY(0);
+  }
+  40% {
+    transform: translateY(-8px);
+  }
+  60% {
+    transform: translateY(-4px);
+  }
 }
 
-/* Generate image button */
-.generate-image-btn {
-  background: linear-gradient(135deg, #e0bfff, #bfae9e);
-  border: 2px solid #181818;
-  border-radius: 8px;
-  padding: 6px 12px;
-  font-size: 0.8rem;
-  color: #181818;
+.no-items {
+  grid-column: 1 / -1;
+  text-align: center;
+  color: #6b7280;
+  font-size: 16px;
+  padding: 40px;
+}
+
+.closet-item {
+  background: linear-gradient(135deg, #fff 0%, #fef7ff 100%);
+  border-radius: 20px;
+  box-shadow: 0 4px 16px rgba(236, 72, 153, 0.15);
+  padding: 0;
+  width: 240px;
+  min-height: 280px;
+  text-align: center;
+  position: relative;
+  border: 2px solid #fce7f3;
   cursor: pointer;
-  transition: all 0.2s ease;
-  margin-top: 8px;
-  font-family: 'Montserrat', Arial, sans-serif;
-  font-weight: 600;
-  text-transform: uppercase;
-  letter-spacing: 0.05em;
-  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
+  opacity: 1;
+  margin: 0 auto;
+  transition: all 0.3s ease;
+  transform: rotate(-1deg);
+  overflow: hidden;
 }
 
-.generate-image-btn:hover:not(:disabled) {
-  background: linear-gradient(135deg, #bfae9e, #e0bfff);
-  transform: translateY(-1px);
-  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
+/* First row items (1st and 2nd items) */
+.closet-item:nth-child(1),
+.closet-item:nth-child(2) {
+  transform: rotate(-2deg);
 }
 
-.generate-image-btn:disabled {
-  opacity: 0.6;
-  cursor: not-allowed;
-  transform: none;
+/* Second row items (3rd and 4th items) */
+.closet-item:nth-child(3),
+.closet-item:nth-child(4) {
+  transform: rotate(2deg);
+}
+
+/* Third row items (5th and 6th items) */
+.closet-item:nth-child(5),
+.closet-item:nth-child(6) {
+  transform: rotate(-1.5deg);
 }
 
-.generate-image-btn:active:not(:disabled) {
-  transform: translateY(0);
+/* Fourth row items (7th and 8th items) */
+.closet-item:nth-child(7),
+.closet-item:nth-child(8) {
+  transform: rotate(1.5deg);
+}
+
+/* Fifth row items (9th and 10th items) */
+.closet-item:nth-child(9),
+.closet-item:nth-child(10) {
+  transform: rotate(-1deg);
+}
+
+/* Sixth row items (11th and 12th items) */
+.closet-item:nth-child(11),
+.closet-item:nth-child(12) {
+  transform: rotate(1deg);
+}
+
+.closet-item::before {
+  content: '';
+  position: absolute;
+  top: -8px;
+  left: 50%;
+  transform: translateX(-50%);
+  width: 40px;
+  height: 12px;
+  background: linear-gradient(135deg, #fef3c7 0%, #fde68a 100%);
+  border-radius: 6px;
   box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
+  z-index: 2;
+}
+
+.closet-item::after {
+  content: '';
+  position: absolute;
+  top: 0;
+  left: 0;
+  right: 0;
+  bottom: 0;
+  background: 
+    radial-gradient(circle at 20% 20%, rgba(255, 255, 255, 0.8) 0%, transparent 50%),
+    radial-gradient(circle at 80% 80%, rgba(255, 255, 255, 0.6) 0%, transparent 50%);
+  border-radius: 20px;
+  pointer-events: none;
+  z-index: 1;
+}
+
+.closet-item:hover {
+  transform: translateY(-6px) rotate(0deg);
+  box-shadow: 0 8px 24px rgba(236, 72, 153, 0.25);
+  border-color: #fbcfe8;
+}
+
+.closet-item.build-mode {
+  cursor: pointer;
+  opacity: 1;
+  border: 2px solid #fce7f3;
+  transform: rotate(-1deg);
+}
+
+.closet-item.build-mode:hover {
+  opacity: 1;
+  transform: translateY(-6px) rotate(0deg);
+  box-shadow: 0 8px 24px rgba(236, 72, 153, 0.25);
 }
 
-/* Outfit suggestion in chat */
-.chat-outfit-suggestion {
-  margin: 24px 0 0 0;
-  padding: 18px 16px 16px 16px;
-  background: #f7e8ff;
-  border: 2.5px dashed #e0bfff;
-  border-radius: 18px;
-  box-shadow: 0 2px 8px #bfae9e22;
+/* Flip card structure */
+.card-inner {
+  position: relative;
+  width: 100%;
+  height: 100%;
+  text-align: center;
+  transition: transform 0.6s;
+  transform-style: preserve-3d;
+  min-height: 280px;
+}
+
+.closet-item.flipped .card-inner {
+  transform: rotateY(180deg);
+}
+
+.card-front,
+.card-back {
+  position: absolute;
+  width: 100%;
+  height: 100%;
+  backface-visibility: hidden;
   display: flex;
   flex-direction: column;
+  justify-content: flex-start;
   align-items: center;
-  gap: 12px;
+  padding: 16px;
+  box-sizing: border-box;
 }
-.outfit-pieces-row {
-  display: flex;
-  flex-direction: row;
-  gap: 24px;
-  justify-content: center;
-  margin-bottom: 10px;
+
+.card-back {
+  transform: rotateY(180deg);
+  background: linear-gradient(135deg, #fdf2f8 0%, #fce7f3 100%);
+  border-radius: 20px;
+  overflow: hidden;
 }
-.outfit-piece {
+
+.description-content {
+  text-align: center;
+  color: #374151;
+  width: 100%;
+  height: 100%;
   display: flex;
   flex-direction: column;
+  justify-content: center;
   align-items: center;
-  gap: 6px;
+  padding: 20px;
+  box-sizing: border-box;
 }
-.outfit-piece-label {
-  font-size: 0.95rem;
-  font-weight: 700;
-  color: #bfae9e;
-  margin-bottom: 2px;
-  letter-spacing: 0.04em;
-  text-shadow: 0 1px 0 #fff;
+
+.description-content h3 {
+  font-size: 18px;
+  font-weight: 600;
+  margin-bottom: 12px;
+  color: #7c3aed;
 }
-.outfit-piece-img {
-  width: 80px;
-  height: 80px;
+
+.description-content p {
+  font-size: 14px;
+  line-height: 1.5;
+  margin-bottom: 16px;
+  color: #6b7280;
+  max-height: 120px;
+  overflow-y: auto;
+  word-wrap: break-word;
+}
+
+.flip-back-btn {
+  background: linear-gradient(135deg, #fce7f3 0%, #fbcfe8 100%);
+  color: #ec4899;
+  border: 2px solid #ec4899;
+  border-radius: 8px;
+  padding: 8px 16px;
+  font-size: 14px;
+  font-weight: 600;
+  cursor: pointer;
+  transition: all 0.3s ease;
+  z-index: 20;
+}
+
+.flip-back-btn:hover {
+  background: linear-gradient(135deg, #fdf2f8 0%, #fce7f3 100%);
+  transform: translateY(-2px);
+  box-shadow: 0 4px 12px rgba(236, 72, 153, 0.2);
+}
+
+.closet-item.selected {
+  border: 3px solid #ec4899;
+  box-shadow: 0 6px 20px rgba(236, 72, 153, 0.3);
+  transform: scale(1.02) rotate(0deg);
+}
+
+.item-image {
+  width: 95%;
+  height: 70%;
   object-fit: contain;
-  border-radius: 10px;
-  border: 2px solid #e0bfff;
-  background: #fff;
-  box-shadow: 0 2px 8px #bfae9e22;
-  margin-bottom: 2px;
+  border-radius: 16px;
+  margin-bottom: 8px;
+  border: 2px solid #fce7f3;
+  box-shadow: 0 2px 8px rgba(236, 72, 153, 0.1);
+  position: relative;
+  transform: rotate(1deg);
 }
-.outfit-piece-placeholder {
-  width: 80px;
-  height: 80px;
+
+.item-image::before {
+  content: '';
+  position: absolute;
+  top: -4px;
+  left: 10px;
+  width: 20px;
+  height: 8px;
+  background: linear-gradient(135deg, #fef3c7 0%, #fde68a 100%);
+  border-radius: 4px;
+  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
+  z-index: 3;
+}
+
+.outfit-image {
+  width: 100%;
+  height: 200px;
+  object-fit: cover;
+  border-radius: 16px;
+  margin-bottom: 8px;
+  border: 2px solid #fce7f3;
+  box-shadow: 0 2px 8px rgba(236, 72, 153, 0.1);
+  position: relative;
+  transform: rotate(-0.5deg);
+}
+
+.outfit-image::before {
+  content: '';
+  position: absolute;
+  top: -4px;
+  right: 10px;
+  width: 20px;
+  height: 8px;
+  background: linear-gradient(135deg, #fef3c7 0%, #fde68a 100%);
+  border-radius: 4px;
+  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
+  z-index: 3;
+}
+
+.original-image {
+  width: 60px;
+  height: 60px;
+  object-fit: contain;
+  border-radius: 12px;
+  margin-bottom: 8px;
+  border: 2px solid #fce7f3;
+  background: white;
+  box-shadow: 0 2px 6px rgba(236, 72, 153, 0.1);
+}
+
+.no-image-placeholder {
+  width: 100%;
+  height: 200px;
+  background: linear-gradient(135deg, #fdf2f8 0%, #fce7f3 100%);
+  border-radius: 16px;
+  margin-bottom: 8px;
   display: flex;
   align-items: center;
   justify-content: center;
-  background: #f3f3f3;
-  border-radius: 10px;
-  border: 2px dashed #e0bfff;
-  color: #bfae9e;
-  font-size: 0.9rem;
-}
-.wear-outfit-btn {
-  background: linear-gradient(135deg, #e0bfff, #bfae9e);
-  border: 2px solid #181818;
-  border-radius: 10px;
-  padding: 8px 22px;
-  font-size: 1.05rem;
-  color: #181818;
-  cursor: pointer;
-  font-family: 'Montserrat', Arial, sans-serif;
+  color: #ec4899;
+  font-size: 14px;
+  border: 2px dashed #fbcfe8;
+}
+
+.item-title {
   font-weight: 700;
-  text-transform: uppercase;
-  letter-spacing: 0.06em;
-  box-shadow: 0 2px 8px #bfae9e22;
+  font-size: 18px;
+  margin-bottom: 4px;
+  color: #1f2937;
+}
+
+.item-status {
+  color: #7c3aed;
+  font-weight: 600;
+  font-size: 14px;
+  margin-bottom: 4px;
+}
+
+.item-description {
+  color: #444;
+  font-size: 14px;
+  line-height: 1.4;
   margin-top: 8px;
-  transition: all 0.18s;
 }
-.wear-outfit-btn:hover:not(:disabled) {
-  background: linear-gradient(135deg, #bfae9e, #e0bfff);
-  transform: translateY(-1px) scale(1.04);
-  box-shadow: 0 4px 12px #bfae9e33;
+
+/* Action Buttons */
+.item-action-btn {
+  position: absolute;
+  top: 8px;
+  right: 8px;
+  background: #ffb3d9;
+  color: white;
+  border: none;
+  border-radius: 50%;
+  width: 24px;
+  height: 24px;
+  font-size: 16px;
+  font-weight: bold;
+  cursor: pointer;
+  display: flex;
+  align-items: center;
+  justify-content: center;
+  z-index: 10;
+  transition: all 0.3s ease;
+  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
+}
+
+.item-action-btn:hover:not(.loading) {
+  transform: scale(1.1);
+  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
+}
+
+.item-action-btn.restore {
+  background: #90EE90;
 }
-.wear-outfit-btn:disabled {
+
+.item-action-btn.loading {
+  background: #ccc;
   opacity: 0.6;
   cursor: not-allowed;
-  transform: none;
 }
+
+.loading-spinner {
+  width: 12px;
+  height: 12px;
+  border: 2px solid #fff;
+  border-top: 2px solid transparent;
+  border-radius: 50%;
+  animation: spin 1s linear infinite;
+}
+
+.favorite-btn {
+  position: absolute;
+  top: 8px;
+  right: 8px;
+  background: #f0f0f0;
+  color: #666;
+  border: none;
+  border-radius: 50%;
+  width: 32px;
+  height: 32px;
+  font-size: 16px;
+  cursor: pointer;
+  font-weight: 600;
+  display: flex;
+  align-items: center;
+  justify-content: center;
+  z-index: 10;
+  transition: all 0.3s ease;
+  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
+}
+
+.favorite-btn:hover {
+  transform: scale(1.1);
+  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
+}
+
+.favorite-btn.active {
+  background: #ff6b6b;
+  color: white;
+}
+
+.worn-btn {
+  position: absolute;
+  top: 8px;
+  right: 8px;
+  background: #4CAF50;
+  color: white;
+  border: none;
+  border-radius: 50%;
+  width: 32px;
+  height: 32px;
+  font-size: 16px;
+  cursor: pointer;
+  font-weight: 600;
+  display: flex;
+  align-items: center;
+  justify-content: center;
+  z-index: 10;
+  transition: all 0.3s ease;
+  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
+}
+
+.worn-btn:hover {
+  transform: scale(1.1);
+  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
+}
+
+.info-btn {
+  position: absolute;
+  top: 8px;
+  left: 8px;
+  background: rgba(255, 255, 255, 0.9);
+  border: none;
+  color: #7c3aed;
+  font-size: 16px;
+  cursor: pointer;
+  padding: 4px;
+  border-radius: 50%;
+  display: flex;
+  align-items: center;
+  justify-content: center;
+  width: 24px;
+  height: 24px;
+  z-index: 10;
+  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
+  transition: all 0.3s ease;
+}
+
+.info-btn:hover {
+  background: rgba(255, 255, 255, 1);
+  transform: scale(1.1);
+  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
+}
+
+/* Add Item Section */
+.add-item-section {
+  display: flex;
+  flex-direction: row;
+  align-items: center;
+  justify-content: center;
+  margin-top: 24px;
+  gap: 16px;
+}
+
+.add-item-btn {
+  width: 60px;
+  height: 60px;
+  border-radius: 50%;
+  background: #b3d1f7;
+  color: #fff;
+  font-size: 24px;
+  font-weight: 700;
+  border: none;
+  box-shadow: 0 2px 12px #e3f6fd44;
+  cursor: pointer;
+  display: flex;
+  align-items: center;
+  justify-content: center;
+  transition: all 0.3s ease;
+}
+
+.add-item-btn:hover {
+  transform: scale(1.1);
+  box-shadow: 0 6px 20px rgba(139, 92, 246, 0.4);
+}
+
+.add-item-text {
+  color: #7c3aed;
+  font-weight: 600;
+  font-size: 18px;
+  font-family: "'EB Garamond', serif";
+}
+
+/* Loading Container */
+.loading-container {
+  display: flex;
+  justify-content: center;
+  align-items: center;
+  min-height: 100vh;
+  font-size: 18px;
+  color: #6b7280;
+  font-weight: 500;
+}
+
+/* Animations */
+@keyframes spin {
+  0% { transform: rotate(0deg); }
+  100% { transform: rotate(360deg); }
+}
+
+@keyframes moveText {
+  0% { transform: translateX(100%); }
+  100% { transform: translateX(-100%); }
+}
+
+/* Responsive Design */
+@media (max-width: 1200px) {
+  .content-area {
+    flex-direction: column;
+    gap: 24px;
+  }
+  
+  .avatar-section {
+    flex: none;
+    width: 100%;
+  }
+  
+  .closet-grid {
+    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
+  }
+}
+
+@media (max-width: 768px) {
+  .navbar {
+    padding: 12px 16px;
+    flex-direction: column;
+    gap: 12px;
+  }
+  
+  .navbar-center {
+    gap: 8px;
+  }
+  
+  .nav-btn {
+    font-size: 12px;
+    padding: 8px 12px;
+  }
+  
+  .main-content {
+    padding: 16px;
+    margin-top: 140px;
+  }
+  
+  .category-filter {
+    flex-wrap: wrap;
+    gap: 8px;
+  }
+  
+  .closet-grid {
+    grid-template-columns: 1fr;
+    gap: 16px;
+  }
+  
+  .avatar-image,
+  .avatar-placeholder {
+    width: 240px;
+    height: 480px;
+  }
+  
+  .logo-overlay {
+    width: 80px;
+    top: 10px;
+    left: 10px;
+  }
+} 
\ No newline at end of file
diff --git a/src/UserPage.jsx b/src/UserPage.jsx
index 3ea3e92..1503e6a 100644
--- a/src/UserPage.jsx
+++ b/src/UserPage.jsx
@@ -1,7 +1,21 @@
 import React, { useState, useEffect, useRef } from "react";
 import axios from "axios";
 import logo from './assets/logo.png';
+import favStar from './assets/fav-star.webp';
 import API_BASE_URL from './config.js';
+import './UserPage.css';
+
+// Helper: Generate random animation for a star
+const animationNames = ['moveX', 'moveY', 'moveXY'];
+function getRandomAnimation() {
+  const name = animationNames[Math.floor(Math.random() * animationNames.length)];
+  const duration = 8 + Math.random() * 12; // 8s to 20s
+  const delay = Math.random() * 10; // 0-10s
+  return {
+    animation: `${name} ${duration}s linear infinite`,
+    animationDelay: `${delay}s`
+  };
+}
 
 const closetCategories = [
   { key: "all", label: "All" },
@@ -13,134 +27,69 @@ const closetCategories = [
   { key: "unused", label: "Unused" }
 ];
 
-function UserAvatar({ generatedAvatarUrl, avatarUrl, username, uploading, handleAvatarChange, fileInputRef, setGeneratedAvatarUrl, handleFavorite, handleMarkAsWorn }) {
+function UserAvatar({ generatedAvatarUrl, avatarUrl, username, uploading, handleAvatarChange, fileInputRef, setGeneratedAvatarUrl, handleFavorite, handleMarkAsWorn, handleMarkAsRecurring, buildMode }) {
   // Show generated avatar if it exists, otherwise show real avatar
   const displayAvatarUrl = generatedAvatarUrl || avatarUrl;
   
   return (
-    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', position: 'relative' }}>
+    <div className="user-avatar-container">
       {displayAvatarUrl ? (
-        <div style={{ position: 'relative' }}>
+        <div className="avatar-wrapper">
           <img
             src={displayAvatarUrl}
             alt="User Avatar"
-            style={{
-              width: 350,
-              height: 700, // much taller
-              borderRadius: 24,
-              objectFit: 'cover',
-              border: '3px solid #a78bfa',
-              marginBottom: 12,
-              background: '#ede9fe',
-              display: 'block'
-            }}
+            className="avatar-image"
           />
-          {/* Heart and Worn buttons on generated avatar */}
+
+          
+          {/* Heart button on generated avatar - positioned in top left corner in build mode */}
           {generatedAvatarUrl && (
-            <div style={{
-              position: 'absolute',
-              top: 12,
-              left: 12,
-              display: 'flex',
-              gap: 8
-            }}>
+            <div className={`avatar-heart-button ${buildMode ? 'build-mode' : ''}`}>
               <button
                 onClick={handleFavorite}
-                style={{
-                  background: '#ff6b6b',
-                  color: 'white',
-                  border: 'none',
-                  borderRadius: '50%',
-                  width: 40,
-                  height: 40,
-                  fontSize: 18,
-                  cursor: 'pointer',
-                  display: 'flex',
-                  alignItems: 'center',
-                  justifyContent: 'center',
-                  boxShadow: '0 2px 8px rgba(0,0,0,0.2)'
-                }}
+                className="avatar-action-btn favorite-btn"
                 title="Add to Favorites"
               >
                 ❤️
               </button>
+            </div>
+          )}
+          
+          {/* Recurring button on generated avatar - positioned in top right corner in build mode */}
+          {generatedAvatarUrl && (
+            <div className={`avatar-recurring-button ${buildMode ? 'build-mode' : ''}`}>
               <button
-                onClick={handleMarkAsWorn}
-                style={{
-                  background: '#22c55e',
-                  color: 'white',
-                  border: 'none',
-                  borderRadius: '50%',
-                  width: 40,
-                  height: 40,
-                  fontSize: 18,
-                  cursor: 'pointer',
-                  display: 'flex',
-                  alignItems: 'center',
-                  justifyContent: 'center',
-                  boxShadow: '0 2px 8px rgba(0,0,0,0.2)'
-                }}
-                title="Mark as Worn"
+                onClick={handleMarkAsRecurring}
+                className="avatar-action-btn recurring-btn"
+                title="Add to Recurring"
               >
-                ✓
+                🔄
               </button>
             </div>
           )}
         </div>
       ) : (
-        <div style={{
-          width: 350,
-          height: 700, // much taller
-          borderRadius: 24,
-          border: '2.5px dashed #a78bfa',
-          background: '#f3e8ff',
-          marginBottom: 12,
-          display: 'flex',
-          alignItems: 'center',
-          justifyContent: 'center',
-          color: '#a78bfa',
-          fontSize: 64,
-          fontWeight: 600
-        }}>
+        <div className="avatar-placeholder">
           <span role="img" aria-label="avatar placeholder">👤</span>
         </div>
       )}
-      <div style={{ fontWeight: 'bold', color: '#7c3aed', fontSize: 20 }}>{username}</div>
+      <div className="username">{username}</div>
       {generatedAvatarUrl && (
-        <div style={{ 
-          color: '#22c55e', 
-          fontWeight: 600, 
-          fontSize: 14, 
-          marginTop: 4,
-          background: '#f0fdf4',
-          padding: '4px 8px',
-          borderRadius: 6,
-          border: '1px solid #22c55e'
-        }}>
-          ✨ AI Generated Outfit
+        <div className="avatar-buttons-container">
+          <div className="ai-generated-badge">
+            ✨ AI Generated Outfit
+          </div>
+          <button
+            onClick={() => {
+              setGeneratedAvatarUrl(null);
+              localStorage.removeItem('generatedAvatarUrl');
+            }}
+            className="revert-avatar-btn"
+          >
+            Revert to Original Avatar
+          </button>
         </div>
       )}
-
-      {generatedAvatarUrl && (
-        <button
-          onClick={() => {
-            setGeneratedAvatarUrl(null);
-            localStorage.removeItem('generatedAvatarUrl');
-          }}
-          style={{
-            marginTop: 8,
-            color: '#ff6b6b',
-            fontWeight: 600,
-            cursor: 'pointer',
-            fontSize: 14,
-            background: 'none',
-            border: 'none',
-            textDecoration: 'underline'
-          }}
-        >
-          Revert to Original Avatar
-        </button>
-      )}
     </div>
   );
 }
@@ -251,6 +200,7 @@ const UserPage = () => {
   const [canAccessCloset, setCanAccessCloset] = useState(true);
   const [remainingUploads, setRemainingUploads] = useState(0);
   const [expandedItems, setExpandedItems] = useState({});
+  const [flippedItems, setFlippedItems] = useState(new Set()); // Track which items are flipped
   const [loadingItems, setLoadingItems] = useState(new Set()); // Track loading state for individual items
   const [processingUploads, setProcessingUploads] = useState(false); // Track loading state for processing uploads
   const hasProcessedUploads = useRef(false); // Track if we've already processed uploads
@@ -595,6 +545,54 @@ const UserPage = () => {
       return;
     }
     
+    const token = sessionStorage.getItem('token') || localStorage.getItem('token');
+    try {
+      // No duplicate checking - allow all outfits to be added
+      console.log('Creating new outfit and marking as worn...');
+      
+      // Create new outfit via backend
+      const outfitData = {
+        title: `Outfit with ${closetItems.find(i => i.id === selectedTopId)?.label || 'Top'} and ${closetItems.find(i => i.id === selectedBottomId)?.label || 'Bottom'}`,
+        clothingItemIds: [selectedTopId, selectedBottomId], // Correct field name (camelCase)
+        image_key: generatedAvatarUrl, // Use image_key instead of generated_image_url
+        bucket_name: "clothing-items-remoda", // Add bucket name
+        is_favorite: false,
+        is_recurring: false
+      };
+      
+      console.log('Sending outfit data:', outfitData);
+      
+      const response = await axios.post(`${API_BASE_URL}/outfits`, outfitData, {
+        headers: { Authorization: `Bearer ${token}` }
+      });
+      
+      if (response.data && response.data.success) {
+        console.log('Outfit created and marked as worn successfully:', response.data.data);
+        console.log('Full response from backend:', response.data);
+        showToast('✓ Outfit marked as worn!', 'success');
+        
+        // Refresh outfits from backend
+        loadOutfits();
+      } else {
+        showToast('Failed to mark as worn. Please try again.', 'error');
+      }
+    } catch (error) {
+      console.error('Error marking outfit as worn:', error);
+      if (error.response) {
+        console.error('Backend response:', error.response.data);
+        console.error('Status:', error.response.status);
+      }
+      showToast('Failed to mark as worn. Please try again.', 'error');
+    }
+  };
+
+  // Add to Recurring functionality
+  const handleMarkAsRecurring = async () => {
+    if (!generatedAvatarUrl) {
+      showToast('No outfit generated yet! Use "Try On" first to create an outfit.', 'error');
+      return;
+    }
+    
     const token = sessionStorage.getItem('token') || localStorage.getItem('token');
     try {
       // No duplicate checking - allow all outfits to be added
@@ -1033,8 +1031,30 @@ const UserPage = () => {
 
   if (loading) return <div>Loading your closet...</div>;
 
+  // Generate 60 random star positions and animations
+  const stars = Array.from({ length: 60 }).map((_, i) => {
+    const top = Math.random() * 100;
+    const left = Math.random() * 100;
+    const size = 18 + Math.random() * 52; // 18px to 70px
+    const opacity = 0.18 + Math.random() * 0.45; // 0.18 to 0.63
+    const anim = getRandomAnimation();
+    const style = {
+      position: 'absolute',
+      zIndex: 0,
+      pointerEvents: 'none',
+      opacity,
+      width: size,
+      height: size,
+      top: `${top}%`,
+      left: `${left}%`,
+      filter: 'drop-shadow(0 2px 8px #b7e6e0)',
+      ...anim
+    };
+    return <img src={favStar} alt="star" key={i} style={style} />;
+  });
+
   return (
-    <div style={{
+    <div className={`user-page ${buildMode ? 'build-mode' : ''}`} style={{
       fontFamily: "'EB Garamond', serif",
       display: "flex",
       flexDirection: "column",
@@ -1060,297 +1080,131 @@ const UserPage = () => {
         }}
       />
 
-      {/* Redesigned Navigation Bar */}
-      <div style={{
-        position: 'fixed',
-        top: 0,
-        left: 0,
-        right: 0,
-        background: 'linear-gradient(135deg, #a78bfa 0%, #8b5cf6 100%)',
-        padding: '16px 32px',
-        zIndex: 1000,
-        boxShadow: '0 4px 20px rgba(139, 92, 246, 0.3)',
-        display: 'flex',
-        justifyContent: 'space-between',
-        alignItems: 'center'
-      }}>
-        {/* Left side - Logo */}
-        <div style={{ display: 'flex', alignItems: 'center' }}>
-          <img
-            src={logo}
-            alt="ReModa Logo"
-            style={{ 
-              width: 120,
-              height: 'auto',
-              objectFit: 'contain',
-            }}
-          />
-        </div>
+      {/* Logo overlay */}
+      <div className="logo-overlay" onClick={() => window.location.href = '/'} style={{ cursor: 'pointer' }}>
+        <img src={logo} alt="Re:Moda Logo" className="site-logo" />
+      </div>
 
-        {/* Center - Navigation Buttons */}
-        <div style={{
-          display: 'flex',
-          gap: 16,
-          alignItems: 'center'
-        }}>
-          <button 
-            style={{
-              background: coinBalance < 10 ? "#cbd5e1" : "#fef3c7",
-              color: coinBalance < 10 ? "#64748b" : "#92400e",
-              border: "none",
-              borderRadius: 20,
-              fontWeight: 600,
-              fontSize: 16,
-              padding: "12px 24px",
-              cursor: coinBalance < 10 ? "not-allowed" : "pointer",
-              boxShadow: "0 2px 12px rgba(0, 0, 0, 0.1)",
-              transition: "all 0.2s ease",
-              display: 'flex',
-              alignItems: 'center',
-              gap: 8
-            }}
-            onClick={() => {
-              if (coinBalance < 10) {
-                alert(`You need 10 coins to use AI Try-On. Current balance: ${coinBalance} coins`);
-                return;
-              }
-              setBuildMode(true);
-              setSelectedTopId(null);
-              setSelectedBottomId(null);
-              setSelectedShoesId(null);
-              setGeneratedAvatarUrl(null);
-            }}
-          >
-            <span style={{ fontSize: 18 }}>✨</span>
-            Build your own (10 coins)
-          </button>
-          
-          <button
-            style={{
-              background: "#fbbf24",
-              color: "#92400e",
-              border: "none",
-              borderRadius: 20,
-              fontWeight: 600,
-              fontSize: 16,
-              padding: "12px 24px",
-              cursor: "pointer",
-              boxShadow: "0 2px 12px rgba(0, 0, 0, 0.1)",
-              transition: "all 0.2s ease",
-              display: 'flex',
-              alignItems: 'center',
-              gap: 8
-            }}
-            onClick={() => window.location.href = "/thrift"}
-          >
-            <span style={{ fontSize: 18 }}>🪙</span>
-            Get More Coins
-          </button>
+      {/* Navbar */}
+      <nav className={`navbar ${buildMode ? 'build-mode' : ''}`}>
+        <div className="navbar-content">
+          {/* Page title in navbar */}
+          <div className="navbar-title">{buildMode ? 'Build Your Own Mode' : 'My Closet'}</div>
           
-          <button
-            onClick={() => window.location.href = '/stylist-chat'}
-            style={{
-              background: "#e0e7ff",
-              color: "#3730a3",
-              border: "none",
-              borderRadius: 20,
-              fontWeight: 600,
-              fontSize: 16,
-              padding: "12px 24px",
-              cursor: "pointer",
-              boxShadow: "0 2px 12px rgba(0, 0, 0, 0.1)",
-              transition: "all 0.2s ease",
-              display: 'flex',
-              alignItems: 'center',
-              gap: 8
-            }}
-          >
-            <span style={{ fontSize: 18 }}>💬</span>
-            Chat w/ ur stylist
-          </button>
-        </div>
-
-        {/* Right side - Selected Items and Coin Balance */}
-        <div style={{ display: 'flex', alignItems: 'center', gap: 16 }}>
-          {/* Selected Top/Bottom display - only show in buildMode */}
-          {buildMode && (
-            <div style={{
-              background: '#ede9fe',
-              border: '2px solid #a78bfa',
-              borderRadius: 16,
-              padding: '8px 12px',
-              boxShadow: '0 2px 12px #a78bfa22',
-              fontFamily: "'EB Garamond', serif",
-              color: '#7c3aed',
-              fontWeight: 600,
-              fontSize: 12,
-              textAlign: 'left',
-              display: 'flex',
-              flexDirection: 'column',
-              gap: 2,
-              minWidth: 140,
-              maxHeight: 'fit-content'
-            }}>
-              <div style={{ fontSize: 12, fontWeight: 700 }}>
-                Selected Top: <span style={{ color: '#232323', fontWeight: 600 }}>
-                  {selectedTopId ? '✓' : 'No top selected'}
-                </span>
-              </div>
-              <div style={{ fontSize: 12, fontWeight: 700 }}>
-                Selected Bottom: <span style={{ color: '#232323', fontWeight: 600 }}>
-                  {selectedBottomId ? '✓' : 'No bottom selected'}
-                </span>
-              </div>
-              <div style={{ fontSize: 12, fontWeight: 700 }}>
-                Selected Shoes: <span style={{ color: '#232323', fontWeight: 600 }}>
-                  {selectedShoesId ? '✓' : 'No shoes selected'}
-                </span>
-              </div>
+          {/* Desktop navigation */}
+          <div className="uploads-nav-buttons">
+            <button 
+              className={`nav-btn build-btn ${coinBalance < 10 ? 'disabled' : ''}`}
+              onClick={() => {
+                if (buildMode) {
+                  // Exit build mode
+                  setBuildMode(false);
+                  setSelectedTopId(null);
+                  setSelectedBottomId(null);
+                  setGeneratedAvatarUrl(null);
+                } else {
+                  // Enter build mode
+                  if (coinBalance < 10) {
+                    alert(`You need 10 coins to use AI Try-On. Current balance: ${coinBalance} coins`);
+                    return;
+                  }
+                  setBuildMode(true);
+                  setSelectedTopId(null);
+                  setSelectedBottomId(null);
+                  setGeneratedAvatarUrl(null);
+                }
+              }}
+            >
+              <span className="btn-icon">{buildMode ? '🏠' : '✨'}</span>
+              {buildMode ? 'Back to My Closet' : 'Build your own (10 coins)'}
+            </button>
+            
+            <button
+              className="nav-btn coins-btn"
+              onClick={() => window.location.href = "/thrift"}
+            >
+              <span className="btn-icon">🪙</span>
+              Get More Coins
+            </button>
+            
+            <button
+              className="nav-btn chat-btn"
+              onClick={() => window.location.href = '/stylist-chat'}
+            >
+              <span className="btn-icon">💬</span>
+              Chat w/ ur stylist
+            </button>
+            
+            {/* Coin Balance */}
+            <div className="coin-balance">
+              <span className="coin-icon">🪙</span>
+              <span className="coin-amount">{Math.max(0, coinBalance)} coins</span>
             </div>
-          )}
-          
-          {/* Coin Balance */}
-          <div style={{
-            background: '#fef3c7',
-            border: '2px solid #f59e0b',
-            borderRadius: 20,
-            padding: '12px 20px',
-            boxShadow: '0 2px 12px rgba(0, 0, 0, 0.1)',
-            fontFamily: "'EB Garamond', serif",
-            color: '#92400e',
-            fontWeight: 700,
-            fontSize: 16,
-            display: 'flex',
-            alignItems: 'center',
-            gap: 8,
-            minWidth: 120
-          }}>
-            <span style={{ fontSize: 20 }}>🪙</span>
-            <span>{Math.max(0, coinBalance)} coins</span>
           </div>
         </div>
-      </div>
+      </nav>
+
+      {/* Animated star background, always behind content */}
+      <div className="star-bg">{stars}</div>
 
       {/* Full Screen Loading State for Processing Uploads */}
       {processingUploads && (
-        <div style={{
-          position: 'fixed',
-          top: 0,
-          left: 0,
-          right: 0,
-          bottom: 0,
-          width: '100%',
-          height: '100%',
-          backgroundColor: 'rgba(0, 0, 0, 0.8)',
-          display: 'flex',
-          justifyContent: 'center',
-          alignItems: 'center',
-          zIndex: 9999,
-          backdropFilter: 'blur(10px)'
-        }}>
-          <div style={{
-            display: 'flex',
-            flexDirection: 'column',
-            alignItems: 'center',
-            gap: '24px',
-            textAlign: 'center',
-            color: 'white'
-          }}>
-            <div style={{
-              width: '80px',
-              height: '80px',
-              border: '6px solid rgba(255, 255, 255, 0.3)',
-              borderTop: '6px solid #667eea',
-              borderRadius: '50%',
-              animation: 'spin 1s linear infinite'
-            }}></div>
-            <div style={{
-              fontSize: '28px',
-              fontWeight: 'bold',
-              color: 'white',
-              marginBottom: '8px'
-            }}>
+        <div className="processing-overlay">
+          <div className="processing-content">
+            <div className="spinner"></div>
+            <div className="processing-text">
               Processing Your Wardrobe...
             </div>
-            <div style={{
-              fontSize: '18px',
-              color: 'rgba(255, 255, 255, 0.8)',
-              lineHeight: '1.5',
-              maxWidth: '500px'
-            }}>
+            <div className="processing-subtext">
               Please wait while we process your uploaded items and update your closet.
             </div>
           </div>
         </div>
       )}
       {/* Main white card */}
-      <div style={{
-        display: "flex",
-        flexDirection: "column",
-        width: "95vw",
-        maxWidth: 1400,
-        margin: "120px auto 0 auto", // Increased top margin for fixed nav bar
-        background: "#fff",
-        borderRadius: 32,
-        boxShadow: "0 4px 32px #e3f6fd44",
-        padding: 32,
-        minHeight: 600
-      }}>
+      <div className="main-content">
         {/* Main Content Container */}
-        <div style={{
-          display: "flex",
-          flexDirection: "column",
-          width: "100%"
-        }}>
+        <div className="content-container">
           {/* Closet Category Filter - Horizontal at top */}
-          <div style={{
-            display: "flex",
-            justifyContent: "center",
-            alignItems: "center",
-            gap: 16,
-            marginBottom: 32,
-            padding: "16px 0",
-            borderBottom: "1px solid #e5e7eb"
-          }}>
+          <div className={`category-filter ${buildMode ? 'build-mode' : ''}`}>
             {closetCategories.map(cat => (
               <button
                 key={cat.key}
                 onClick={() => setSelectedCategory(cat.key)}
-                style={{
-                  background: selectedCategory === cat.key ? "#e0e7ff" : "transparent",
-                  color: "#232323",
-                  border: selectedCategory === cat.key ? "2px solid #7c3aed" : "1px solid #d1d5db",
-                  borderRadius: 20,
-                  fontWeight: 600,
-                  fontSize: 14,
-                  padding: "8px 16px",
-                  cursor: "pointer",
-              transition: "all 0.2s ease",
-                  minWidth: "fit-content"
-                }}
+                className={`category-btn ${selectedCategory === cat.key ? 'active' : ''}`}
               >
                 {cat.label}
               </button>
             ))}
             
-            {/* Try On button - moved to second nav bar */}
+            {/* Build Mode Status Popup */}
+            {buildMode && (
+              <div className="build-status-container">
+                <div className="build-status-popup">
+                  <div className="build-status-content">
+                    <div className="build-status-item">
+                      <span className="build-status-label">Selected Top:</span>
+                      <span className="build-status-value">
+                        {selectedTopId ? '✓' : 'No top selected'}
+                      </span>
+                    </div>
+                    <div className="build-status-item">
+                      <span className="build-status-label">Selected Bottom:</span>
+                      <span className="build-status-value">
+                        {selectedBottomId ? '✓' : 'No bottom selected'}
+                      </span>
+                    </div>
+                  </div>
+                </div>
+              </div>
+            )}
+            
+            {/* Try On button - at the end of categories */}
             {buildMode && (
               <button
                 onClick={handleTryOn}
                 disabled={!selectedTopId || !selectedBottomId || loadingTryOn || coinBalance < 10}
-                style={{
-                  background: '#7c3aed',
-                  color: '#fff',
-                  border: 'none',
-                  borderRadius: 20,
-                  fontWeight: 600,
-                  fontSize: 14,
-                  padding: "8px 16px",
-                  cursor: (!selectedTopId || !selectedBottomId || loadingTryOn || coinBalance < 10) ? 'not-allowed' : 'pointer',
-                  transition: "all 0.2s ease",
-                  opacity: (!selectedTopId || !selectedBottomId || loadingTryOn || coinBalance < 10) ? 0.6 : 1,
-                  minWidth: "fit-content"
-                }}
+                className={`try-on-btn ${(!selectedTopId || !selectedBottomId || loadingTryOn || coinBalance < 10) ? 'disabled' : ''}`}
               >
                 {loadingTryOn ? "Generating..." : "Try On"}
               </button>
@@ -1358,20 +1212,9 @@ const UserPage = () => {
           </div>
           
           {/* Content Area - Avatar on left, clothes on right */}
-          <div style={{
-            display: "flex",
-            flexDirection: "row",
-            alignItems: "flex-start",
-            gap: 32
-          }}>
+          <div className="content-area">
             {/* Avatar Section */}
-            <div style={{
-              flex: "0 0 260px",
-              display: "flex",
-              flexDirection: "column",
-              alignItems: "center",
-              position: "relative"
-            }}>
+            <div className="avatar-section">
 
               {/* Heart icon - only show when there's a generated outfit and no real avatar */}
               {generatedAvatarUrl && !avatarUrl && (
@@ -1417,6 +1260,8 @@ const UserPage = () => {
                 setGeneratedAvatarUrl={setGeneratedAvatarUrl}
                 handleFavorite={handleFavorite}
                 handleMarkAsWorn={handleMarkAsWorn}
+                handleMarkAsRecurring={handleMarkAsRecurring}
+                buildMode={buildMode}
               />
               {/* Animated moving text under avatar */}
               <div style={{
@@ -1436,42 +1281,20 @@ const UserPage = () => {
                   display: 'inline-block',
                   animation: 'moveText 15s linear infinite'
                 }}>
-                  No matter what you wear you are beautiful
+                  No matter what you wear you are beautiful!
                 </span>
               </div>
             </div>
             
                         {/* Clothing Items Section */}
-            <div style={{
-              flex: 1,
-              display: "flex",
-              flexDirection: "column"
-            }}>
-              <div style={{
-                fontSize: 20,
-                fontWeight: 600,
-                color: "#374151",
-                marginBottom: 16,
-                textAlign: "center"
-              }}>
-                Your Closet ({filteredItems.length} items)
+            <div className="clothing-section">
+              <div className="section-title">
+                <span className="item-count">({filteredItems.length} items)</span>
               </div>
               
               {/* Closet Grid: Scrollable container with 2x2 grid */}
-              <div style={{
-                display: "grid",
-                gridTemplateColumns: "repeat(2, 1fr)",
-                gap: 32,
-                maxHeight: "600px",
-                overflowY: "auto",
-                padding: "16px",
-                border: "1px solid #e5e7eb",
-                borderRadius: "12px",
-                backgroundColor: "#fafafa",
-                justifyContent: "center",
-                alignItems: "center"
-              }}>
-                {filteredItems.length === 0 && <div>No items in this category.</div>}
+              <div className="closet-grid">
+                {filteredItems.length === 0 && <div className="no-items">No items in this category.</div>}
             {filteredItems.map(item => {
             // Check if this is an outfit (has outfitClothingItems or is_favorite/is_recurring) or a clothing item
             const isOutfit = item.outfitClothingItems || item.clothingItemIds || item.clothing_item_ids || item.item_ids || item.clothing_ids || item.items || item.is_favorite || item.is_recurring;
@@ -1479,24 +1302,7 @@ const UserPage = () => {
             return (
               <div
                 key={item.id}
-                style={{
-                  background: "#fff",
-                  borderRadius: 16,
-                  boxShadow: "0 2px 12px #e3f6fd44",
-                  padding: 16,
-                  width: 280,
-                  minHeight: 320,
-                  textAlign: "center",
-                  position: "relative",
-                  border: buildMode && ((selectedTopId && selectedTopId === item.id) || (selectedBottomId && selectedBottomId === item.id) || (selectedShoesId && selectedShoesId === item.id)) ? '3px solid #7c3aed' : 'none',
-                  cursor: buildMode ? 'pointer' : 'default',
-                  opacity: buildMode && ((item.category || item.tag)?.toLowerCase() === 'top' || (item.category || item.tag)?.toLowerCase() === 'bottom' || (item.category || item.tag)?.toLowerCase() === 'shoes') ? 1 : buildMode ? 0.5 : 1,
-                  display: 'flex',
-                  flexDirection: 'column',
-                  alignItems: 'center',
-                  justifyContent: 'center',
-                  margin: '0 auto'
-                }}
+                className={`closet-item ${buildMode ? 'build-mode' : ''} ${buildMode && ((selectedTopId && selectedTopId === item.id) || (selectedBottomId && selectedBottomId === item.id)) ? 'selected' : ''} ${flippedItems.has(item.id) ? 'flipped' : ''}`}
                 onClick={() => {
                   if (!buildMode) return;
                   if ((item.category || item.tag)?.toLowerCase() === 'top') setSelectedTopId(item.id);
@@ -1507,6 +1313,8 @@ const UserPage = () => {
                   }
                 }}
               >
+                <div className="card-inner">
+                  <div className="card-front">
                 {isOutfit ? (
                   // Render outfit (generated outfit image)
                   <>
@@ -1527,7 +1335,7 @@ const UserPage = () => {
                                 <img
                                   src={parsedOutfit.avatarImage}
                                   alt="Generated Outfit"
-                                  style={{ width: 120, height: 120, objectFit: "cover", borderRadius: 12, marginBottom: 8 }}
+                                  style={{ width: '100%', height: '85%', objectFit: "cover", borderRadius: 12, marginBottom: 8 }}
                                   onError={(e) => {
                                     console.log('Failed to load outfit image from localStorage:', parsedOutfit.avatarImage);
                                     e.target.style.display = 'none';
@@ -1545,7 +1353,7 @@ const UserPage = () => {
                         <img
                           src={imageUrl}
                           alt="Generated Outfit"
-                          style={{ width: '100%', height: 200, objectFit: "cover", borderRadius: 12, marginBottom: 8 }}
+                          style={{ width: '100%', height: '85%', objectFit: "cover", borderRadius: 12, marginBottom: 8 }}
                           onError={(e) => {
                             console.log('Failed to load outfit image:', imageUrl);
                             e.target.style.display = 'none';
@@ -1693,7 +1501,7 @@ const UserPage = () => {
                     <img
                       src={item.generatedImageUrl}
                       alt={item.label || item.title}
-                      style={{ width: '95%', height: '70%', objectFit: "contain", borderRadius: 12, marginBottom: 8 }}
+                      style={{ width: '100%', height: '85%', objectFit: "cover", borderRadius: 12, marginBottom: 8 }}
                       onError={(e) => {
                         console.log('Failed to load generated image for item:', item.id, item.generatedImageUrl);
                         e.target.style.display = 'none';
@@ -1722,7 +1530,18 @@ const UserPage = () => {
                       })()}
                     </div>
                     <button 
-                      onClick={() => setExpandedItems(prev => ({ ...prev, [item.id]: !prev[item.id] }))}
+                      onClick={(e) => {
+                        e.stopPropagation();
+                        setFlippedItems(prev => {
+                          const newSet = new Set(prev);
+                          if (newSet.has(item.id)) {
+                            newSet.delete(item.id);
+                          } else {
+                            newSet.add(item.id);
+                          }
+                          return newSet;
+                        });
+                      }}
                       style={{
                         position: 'absolute',
                         top: 8,
@@ -1742,50 +1561,46 @@ const UserPage = () => {
                         zIndex: 10,
                         boxShadow: '0 2px 4px rgba(0,0,0,0.1)'
                       }}
-                      title={expandedItems[item.id] ? 'Hide details' : 'View details'}
+                      title={flippedItems.has(item.id) ? 'Show front' : 'View details'}
                     >
                       ℹ️
                     </button>
-                    {expandedItems[item.id] && (
-                      <div style={{ color: "#444", fontSize: 14, lineHeight: 1.4, marginTop: 8 }}>{item.description}</div>
-                    )}
                   </>
                 )}
+                  </div>
+                  <div className="card-back">
+                    <div className="description-content">
+                      <h3>Item Details</h3>
+                      <p>{item.description || 'No description available.'}</p>
+                      <button 
+                        onClick={(e) => {
+                          e.stopPropagation();
+                          setFlippedItems(prev => {
+                            const newSet = new Set(prev);
+                            newSet.delete(item.id);
+                            return newSet;
+                          });
+                        }}
+                        className="flip-back-btn"
+                      >
+                        ← Back to Item
+                      </button>
+                    </div>
+                  </div>
+                </div>
               </div>
             );
           })}
         </div>
         
-        {/* Add (+) button with label - moved outside the grid */}
-        <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'center', marginTop: 24, gap: 16 }}>
-          <button
-            onClick={() => window.location.href = "/uploads"}
-            style={{
-              width: 60,
-              height: 60,
-              borderRadius: "50%",
-              background: "#b3d1f7",
-              color: "#fff",
-              fontSize: 24,
-              fontWeight: 700,
-              border: "none",
-              boxShadow: "0 2px 12px #e3f6fd44",
-              cursor: "pointer",
-              display: "flex",
-              alignItems: "center",
-              justifyContent: "center"
-            }}
-            title="Add more clothes"
-          >+</button>
-          <div style={{
-            color: "#7c3aed",
-            fontWeight: 600,
-            fontSize: 18,
-            fontFamily: "'EB Garamond', serif"
-          }}>
-            Add more clothes
-          </div>
-        </div>
+        {/* Add (+) button overlay - positioned on top of closet grid */}
+        <button
+          onClick={() => window.location.href = "/uploads"}
+          className="add-item-overlay-btn"
+          title="Add more clothes"
+        >
+          +
+        </button>
         </div>
         </div>
         </div>
